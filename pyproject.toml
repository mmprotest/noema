[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "noema"
version = "0.1.0"
description = "Conscious-like LLM agent framework"
authors = [{name = "Noema Contributors"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.10"
keywords = ["llm", "agent", "cognitive", "metacognition"]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "License :: OSI Approved :: MIT License",
  "Intended Audience :: Developers",
  "Topic :: Scientific/Engineering :: Artificial Intelligence"
]
dependencies = [
  "typer>=0.9",
  "pydantic>=2",
  "structlog>=23",
  "jinja2>=3",
  "fastapi>=0.110",
  "uvicorn>=0.22",
  "opentelemetry-sdk>=1.22",
  "opentelemetry-exporter-otlp>=1.22",
  "duckdb>=0.8",
  "numpy>=1.24",
  "scipy>=1.10",
  "python-dateutil>=2.8",
  "requests>=2.31",
  "pyyaml>=6.0"
]

[project.optional-dependencies]
openai = ["openai>=1.0.0"]
observe = ["opentelemetry-exporter-otlp>=1.22"]
ui = ["aiofiles>=23"]
dev = [
  "pytest>=7",
  "pytest-asyncio>=0.21",
  "mypy>=1.8",
  "ruff>=0.1.7",
  "pre-commit>=3.5",
  "mkdocs-material>=9.4"
]

[project.urls]
Homepage = "https://example.com/noema"
Repository = "https://example.com/noema.git"

[project.scripts]
noema = "noema.cli:app"

[tool.setuptools.packages.find]
where = ["src"]

[tool.ruff]
line-length = 100
select = ["E", "F", "I", "UP", "B", "S", "N", "ASYNC"]
ignore = ["S101", "B905"]

[tool.ruff.per-file-ignores]
"tests/*" = ["S" ]

[tool.mypy]
python_version = "3.10"
strict = true
mypy_path = ["src"]
warn_unused_configs = true
implicit_reexport = true

[tool.pytest.ini_options]
minversion = "7"
addopts = "-q"
filterwarnings = ["ignore::DeprecationWarning"]
testpaths = ["tests"]
